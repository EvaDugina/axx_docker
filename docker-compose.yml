version: '3.9'

services:

  psql:
    container_name: accel-psql
    build:
      context: .
      dockerfile: Dockerfile.psql
    environment:
      - TZ=Europe/Moscow
      - LC_TIME=C  # Устанавливает 24-часовой формат
      - LC_ALL=C # Дополнительно устанавливает локаль
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./backups:/backups
      - .env:/.env
    ports:
      - "5050:${POSTGRES_INNER_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - app-network
    restart: unless-stopped

  docker-dind:
    container_name: accel-docker-dind
    image: docker:dind 
    privileged: true  
    volumes:
      - docker-data:/var/lib/docker  
      - ./accelerator:${HOST_DIR}
    environment:
      DOCKER_TLS_CERTDIR: ""
    healthcheck:
      test: >
        sh -c "
          # Проверяем доступность Unix socket
          if ! [ -S /var/run/docker.sock ]; then
            exit 1
          fi
          
          # Проверяем TCP-порт
          if ! nc -z localhost 2375; then
            exit 2
          fi
          
          # Проверяем работоспособность Docker API
          docker version > /dev/null 2>&1 || exit 3
        "
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 25s
    command: ["dockerd", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
    networks:
      - app-network
    restart: unless-stopped

  php:
    container_name: accel-php
    build:
      context: .
      dockerfile: Dockerfile.php
    user: root
    volumes:
      - ./accelerator:${HOST_DIR}
      - ./backups:/backups
      - .env:/.env
    environment:
      TZ: Europe/Moscow 
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_INNER_PORT: ${POSTGRES_INNER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      HOST_DIR: ${HOST_DIR}  
      DOCKER_HOST: tcp://docker-dind:2375
      DOCKER: '{"host": "tcp://docker-dind:2375"}' 
    # ДЛЯ ОТЛАДКИ (XDEBUG):
    # extra_hosts:
      # - "host.docker.internal:host-gateway"
    depends_on:
      psql:
        condition: service_healthy
      docker-dind:
        condition: service_healthy
    networks:
      - app-network

  node:
    container_name: accel-node
    build:
      context: .
      dockerfile: Dockerfile.node
    ports:
      - 3055:3000
    volumes:
      - ./accelerator:/app/accelerator
      - ./nitori_base:/app/nitori_base
    command: sh -c "cd ./accelerator && npm install && cd ../nitori_base && npm install && npx tsc && touch /ready.txt && node ./dist/index.js"
    networks:
      - app-network
    extra_hosts:
      - "vector:127.0.0.1"
    environment:
      TZ: Europe/Moscow 
      DOCKER_HOST: tcp://docker-dind:2375
      DOCKER: '{"host": "tcp://docker-dind:2375"}'
    healthcheck:
      test: >
        sh -c "
          # Проверка зависимостей
          if [ ! -d './accelerator/node_modules' ] || [ ! -d './nitori_base/node_modules' ]; then
            echo 'node_modules missing' >&2
            exit 1
          fi

          # Проверка компиляции
          if [ ! -f './nitori_base/dist/index.js' ]; then
            echo 'TS compilation missing' >&2
            exit 2
          fi
          
          # Проверка процесса
          if ! pgrep -f 'node ./nitori_base/dist/index.js' >/dev/null; then
            echo 'Node process not running' >&2
            exit 3
          fi

          # Проверка создания файла готовности
          if [ ! -f '/ready.txt' ]; then
            echo 'Not ready.' >&2
            exit 4
          fi
          "
      interval: 15s
      timeout: 10s
      retries: 30
      start_period: 30s
    depends_on:
      docker-dind:
        condition: service_healthy

  nginx:
    container_name: accel-nginx
    image: nginx:1.24.0
    ports:
      - "8080:80"
    environment:
      - TZ=Europe/Moscow
    volumes:
      - ./accelerator:${HOST_DIR}
      - ./for_docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./for_docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      node:
        condition: service_healthy
      # php:
      #   condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  docker-data:
