version: '3.9'

services:
  node:
    container_name: accel-node
    build:
      context: .
      dockerfile: Dockerfile.node
    ports:
      - 3055:3000
    volumes:
      - .:/app
    networks:
      - app-network
    extra_hosts:
      - "vector:127.0.0.1"
    environment:
      DOCKER_HOST: tcp://docker-dind:2375
      DOCKER: '{"host": "tcp://docker-dind:2375"}'
    command: sh -c "sleep 30 && cd ./accelerator && npm install && cd ../nitori_base && npm install && npx tsc && node ./dist/index.js"
    depends_on:
      - docker-dind 

  php:
    container_name: accel-php
    build:
      context: .
      dockerfile: Dockerfile.php
    user: root
    volumes:
      - ./accelerator:/var/www/html
    environment:
      HOST_DIR: "/var/www/html"  
      DOCKER_HOST: tcp://docker-dind:2375
      DOCKER: '{"host": "tcp://docker-dind:2375"}'    
    networks:
      - app-network

  nginx:
    container_name: accel-nginx
    image: nginx:1.24.0
    ports:
      - "8080:80"
    volumes:
      - ./accelerator:/var/www/html
      - ./for_docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./for_docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - node

  psql:
    container_name: accel-psql
    build:
      context: .
      dockerfile: Dockerfile.psql
    environment:
      - TZ=Europe/Moscow
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - .${POSTGRES_BACKUP_DIR}:${POSTGRES_BACKUP_DIR}
      - .env:/.env
    ports:
      - "5050:${POSTGRES_INNER_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 15s
      retries: 5
    networks:
      - app-network
    restart: always
  
  # crone-backups:
      # container_name: accel-crone
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.psql
  #   restart: always
  #   volumes:
  #     - ./backups:/backups
  #   depends_on:
  #     psql:
  #       condition: service_healthy
  #   environment:
  #     - POSTGRES_HOST=psql
  #     - POSTGRES_DB=${POSTGRES_DB} 
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --schema=ax --blobs
  #     - SCHEDULE=@every 0d0h2m0s
  #     - BACKUP_ON_START=TRUE
  #     - BACKUP_KEEP_DAYS=7
  #     - BACKUP_KEEP_WEEKS=4
  #     - BACKUP_KEEP_MONTHS=6
  #     - HEALTHCHECK_PORT=81
  #   networks:
  #     - app-network
  #   ports:
  #     - 81:81

  # pgbackups:
      # container_name: accel-pgbackups
  #   image: prodrigestivill/postgres-backup-local
  #   restart: always
  #   volumes:
  #     - ./backups:/backups
  #   depends_on:
  #     psql:
  #       condition: service_healthy
  #   environment:
  #     - POSTGRES_HOST=psql
  #     - POSTGRES_DB=${POSTGRES_DB} 
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --schema=ax --blobs
  #     - SCHEDULE=@every 0d0h2m0s
  #     - BACKUP_ON_START=TRUE
  #     - BACKUP_KEEP_DAYS=7
  #     - BACKUP_KEEP_WEEKS=4
  #     - BACKUP_KEEP_MONTHS=6
  #     - HEALTHCHECK_PORT=81
  #   networks:
  #     - app-network
  #   ports:
  #     - 81:81

  docker-dind:
    container_name: accel-docker-bind
    image: docker:dind 
    privileged: true  
    volumes:
      - docker-data:/var/lib/docker  
      - ./accelerator:/var/www/html
    networks:
      - app-network
    environment:
      DOCKER_TLS_CERTDIR: ""  
    command: ["dockerd", "--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]

networks:
  app-network:
    driver: bridge

volumes:
  docker-data:
